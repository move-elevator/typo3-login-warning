# customsubcategory=detectors=Warning Detectors
# customsubcategory=notification=Notification
# customsubcategory=newip=New IP Warning
# customsubcategory=longtimenosee=Long Time No See Warning
# customsubcategory=outofoffice=Out Of Office Warning

# cat=detector/detectors/010; type=boolean; label=New IP Detector:Detects logins from new IP addresses and triggers a warning email.
newIp.active = 1

# cat=detector/detectors/020; type=boolean; label=Long Time No See Detector:Detects logins after a long period of inactivity (default: 365 days).
longTimeNoSee.active = 1

# cat=detector/detectors/030; type=boolean; label=Out Of Office Detector:Detects logins outside defined working hours, holidays, or vacation periods.
outOfOffice.active = 0

# cat=notification/notification/010; type=string; label=Email Recipients:Email addresses for notifications (comma-separated, default is `warning_email_addr`)
notificationRecipients =

# cat=notification/notification/020; type=boolean; label=Notify User:Also send notification to the logged-in user
notifyUser = 0

# cat=newip/newip/020; type=boolean; label=Hash IP Addresses:Hash the persistence of IP addresses for privacy reasons (SHA-256)
newIp.hashIpAddress = 1

# cat=newip/newip/030; type=boolean; label=Fetch Geolocation:Enable IP geolocation lookup for new IPs
newIp.fetchGeolocation = 1

# cat=newip/newip/040; type=string; label=IP Whitelist:Comma-separated list of whitelisted IPs/networks (e.g. 127.0.0.1,192.168.1.0/24)
newIp.whitelist = 127.0.0.1

# cat=newip/newip/050; type=boolean; label=Only Admins:Only detect new IPs for admin users
newIp.onlyAdmins = 0

# cat=newip/newip/060; type=boolean; label=Only System Maintainers:Only detect new IPs for system maintainer users
newIp.onlySystemMaintainers = 0

# cat=longtimenosee/longtimenosee/020; type=int+; label=Threshold Days:Days of inactivity before triggering notification
longTimeNoSee.thresholdDays = 365

# cat=longtimenosee/longtimenosee/030; type=boolean; label=Only Admins:Only detect for admin users
longTimeNoSee.onlyAdmins = 0

# cat=longtimenosee/longtimenosee/040; type=boolean; label=Only System Maintainers:Only detect for system maintainer users
longTimeNoSee.onlySystemMaintainers = 0

# cat=outofoffice/outofoffice/020; type=string; label=Working Hours (JSON):JSON configuration for working hours (e.g. {"monday":["09:00","17:00"],"tuesday":["09:00","17:00"]})
outOfOffice.workingHours = {"monday":["06:00","19:00"],"tuesday":["06:00","19:00"],"wednesday":["06:00","19:00"],"thursday":["06:00","19:00"],"friday":["06:00","19:00"]}

# cat=outofoffice/outofoffice/030; type=string; label=Timezone:Timezone for working hours (e.g. Europe/Berlin, America/New_York)
outOfOffice.timezone = UTC

# cat=outofoffice/outofoffice/040; type=string; label=Holidays:Comma-separated list of holidays in Y-m-d format (e.g. 2025-01-01,2025-12-25)
outOfOffice.holidays =

# cat=outofoffice/outofoffice/050; type=string; label=Vacation Periods:Comma-separated list of vacation periods in Y-m-d format (e.g. 2025-07-15:2025-07-30,2025-12-20:2025-12-31)
outOfOffice.vacationPeriods =

# cat=outofoffice/outofoffice/060; type=boolean; label=Only Admins:Only detect for admin users
outOfOffice.onlyAdmins = 0

# cat=outofoffice/outofoffice/070; type=boolean; label=Only System Maintainers:Only detect for system maintainer users
outOfOffice.onlySystemMaintainers = 0
