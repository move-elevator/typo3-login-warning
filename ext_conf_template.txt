# customsubcategory=detectors=Warning Detectors
# customsubcategory=notification=Notification
# customsubcategory=newip=New IP Warning
# customsubcategory=longtimenosee=Long Time No See Warning
# customsubcategory=outofoffice=Out Of Office Warning

# cat=detector/detectors/010; type=boolean; label=New IP Detector:Detects logins from new IP addresses and triggers a warning email.
newIp.active = 1

# cat=detector/detectors/020; type=boolean; label=Long Time No See Detector:Detects logins after a long period of inactivity (default: 365 days).
longTimeNoSee.active = 1

# cat=detector/detectors/030; type=boolean; label=Out Of Office Detector:Detects logins outside defined working hours, holidays, or vacation periods.
outOfOffice.active = 0

# cat=notification/notification/010; type=string; label=Email Recipients:Email addresses for notifications (comma-separated, default is `warning_email_addr`)
notificationRecipients =

# cat=newip/newip/020; type=boolean; label=Hash IP Addresses:Hash the persistence of IP addresses for privacy reasons (SHA-256)
newIp.hashIpAddress = 1

# cat=newip/newip/030; type=boolean; label=Fetch Geolocation:Enable IP geolocation lookup for new IPs
newIp.fetchGeolocation = 1

# cat=newip/newip/040; type=boolean; label=Include Device Information:Include browser and OS information in notification emails
newIp.includeDeviceInfo = 1

# cat=newip/newip/050; type=string; label=IP Whitelist:Comma-separated list of whitelisted IPs/networks (e.g. 127.0.0.1,192.168.1.0/24)
newIp.whitelist = 127.0.0.1

# cat=newip/newip/060; type=options[All Users=all,Only Admins=admins,Only System Maintainers=maintainers]; label=Affected Users:Which users should trigger this detector
newIp.affectedUsers = all

# cat=newip/newip/070; type=options[Email Recipients=recipients,Logged-In User=user,Both=both]; label=Notification Receiver:Who should receive the notification
newIp.notificationReceiver = recipients

# cat=longtimenosee/longtimenosee/020; type=int+; label=Threshold Days:Days of inactivity before triggering notification
longTimeNoSee.thresholdDays = 365

# cat=longtimenosee/longtimenosee/030; type=options[All Users=all,Only Admins=admins,Only System Maintainers=maintainers]; label=Affected Users:Which users should trigger this detector
longTimeNoSee.affectedUsers = all

# cat=longtimenosee/longtimenosee/040; type=options[Email Recipients=recipients,Logged-In User=user,Both=both]; label=Notification Receiver:Who should receive the notification
longTimeNoSee.notificationReceiver = recipients

# cat=outofoffice/outofoffice/020; type=string; label=Working Hours (JSON):JSON configuration for working hours. Shortcuts: "workday" (Mon-Fri), "weekend" (Sat-Sun). Examples: {"workday":["06:00","20:00"]}, {"workday":["09:00","17:00"],"weekend":["10:00","14:00"]}
outOfOffice.workingHours = {"workday":["06:00","20:00"]}

# cat=outofoffice/outofoffice/030; type=string; label=Timezone:Timezone for working hours (e.g. Europe/Berlin, America/New_York)
outOfOffice.timezone = UTC

# cat=outofoffice/outofoffice/040; type=string; label=Blocked Periods:Comma-separated list of blocked days or periods. Formats: Full date (2025-12-25), recurring date (12-25), date range (2025-07-15:2025-07-30), recurring range (12-20:12-31). Example: 12-25,01-01,07-15:07-30
outOfOffice.blockedPeriods =

# cat=outofoffice/outofoffice/060; type=options[All Users=all,Only Admins=admins,Only System Maintainers=maintainers]; label=Affected Users:Which users should trigger this detector
outOfOffice.affectedUsers = all

# cat=outofoffice/outofoffice/070; type=options[Email Recipients=recipients,Logged-In User=user,Both=both]; label=Notification Receiver:Who should receive the notification
outOfOffice.notificationReceiver = recipients
